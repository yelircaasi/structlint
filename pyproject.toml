[project]
name = "structlint"
version = "0.2.0"
description = "Simple linter to enforce various aspects of source code structure."
authors = [{name = "Isaac Riley", email = "yelircaasi@proton.me"}]
readme = "README.md"
requires-python = ">=3.11,<3.14"
dependencies = [
    "pydantic         >= 2.11 ",
    "deal             >  4.24 ",
    "multipledispatch >= 1    ",
    "grimp            >= 3.9  ",
    "click            >  8    ",
]

[project.scripts]
structlint = "structlint.cli:main"

[dependency-groups]
test = [
    "pytest           >= 8.3  ",
    "hypothesis       >  6    ",
    "tox              >  4.23 ",
    "pytest-cov       >= 6.0  ",
    "coverage         >  7.6  ",
    "pytest-mock      >= 3.14 ",
    "pytest-testmon   >  2.1  ",
    "pytest-loguru    >= 0.4  ",
    "pytest-profiling >  1.8  ",
]
docs = [
    "mkdocs              >= 1.6  ",
    "mkdocstrings        >= 0.27 ",
    "mkdocstrings-python >= 1.13 ",
    "mkdocs-material     <  9.5  ",
    "pygments            >= 2.19 ",
]
dev = [
    "ipython           >= 8.31  ",
    "deply             >= 0.5   ",
    "grimp             >= 3.5   ",
    "snakefood3        >= 0.0.7 ",
    "pyflame           >= 0.3   ",
    "scalene           >= 1.5.49",
    "semver            >= 3.0   ",
    "z3c.checkversions >= 3.0   ",
]
cli-utils = [
    "rust-just       >= 1.38   ",
    "ruff            >= 0.9    ",
    "mdformat        >= 0.7    ",
    "mdformat_mkdocs >= 4.3.0  ",
    "toml-sort       >= 0.24   ",
    "google-yamlfmt  >= 0.16   ",
    "yamllint        >= 1.37   ",
    "vulture         >= 2.14   ",
    "lefthook        >= 1.10   ",
    "pydeps          >= 1.12   ",
    "bandit          >= 1.8    ",
    "cyclonedx-bom   >= 5.1    ",
    "ty              >= 0.0.1a5",
]

[build-system]
requires = ["uv_build>=0.7.5,<0.8.0"]
build-backend = "uv_build"

[tool.bandit]
targets = ["src/structlint", "scripts/"]
exclude_dirs = []
skips = []

[tool.commitizen]
name = "cz_conventional_commits"
version_scheme = "semver"
version_provider = "uv"
update_changelog_on_bump = true
style = [
    ["qmark", "fg:#ff9d00 bold"],
    ["question", "bold"],
    ["answer", "fg:#ff9d00 bold"],
    ["pointer", "fg:#ff9d00 bold"],
    ["highlighted", "fg:#ff9d00 bold"],
    ["selected", "fg:#cc5454"],
    ["separator", "fg:#cc5454"],
    ["instruction", ""],
    ["text", ""],
    ["disabled", "fg:#858585 italic"],
]

[tool.coverage.run]
branch = true
omit = []
data_file = ".cache/coverage"
source = ["structlint"]

[tool.coverage.report]
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
]
exclude_also = [
    "def main",
    "def __repr__",
]
fail_under = 0

[tool.coverage.html]
directory = "codeqa/coverage/html"

[tool.mypy]
ignore_missing_imports = true
disable_error_code = [
    "prop-decorator",
    "no-redef",
]
strict = false
exclude = "(.venv/.*|.cache.*|scratch.*)"

[tool.pydeps]
max_bacon = 2
no_show = true
verbose = 0
pylib = false
exclude = [
    "os",
    "re",
    "sys",
    "collections",
    "__future__",
]

[tool.pytest.ini_options]
cache_dir = ".cache/pytest_cache"
testpaths = ["tests", "scripts/"]
addopts = "--ignore=_data,src"
markers = [
    "pure: no IO or side effects (refers to the test itself)",
    "read: requires a read operation",
    "write: requires a write operation",
]

[tool.ruff]
include = ["pyproject.toml", "*.py"]
exclude = [".venv/", "*.pyi", "scratch/"]
cache-dir = ".cache/ruff_cache"
target-version = "py312"
line-length = 100
indent-width = 4

[tool.ruff.format]
exclude = [".venv/", "*.pyi"]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
exclude = [".venv/", "*.pyi", "scratch/*"]
select = [
    "E",  #
    "F",  #
    "W",  #
    "C90",  #
    "I",  #
    "N",  #
    # "D",
    "UP",
    "YTT",
    # "ANN",
    "ASYNC",
    # "S",
    # "BLE",
    # "FBT",
    # "B",
    # "A",
    # "COM",
    # "CPY",
    # "C4",
    # "DTZ",
    # "T10",
    # "DJ",
    # "EM",
    # "EXE",
    # "FA",
    # "ISC",
    # "ICN",
    # "LOG",
    # "G",
    # "INP",
    # "PIE",
    # "T20",
    # "PYI",
    # "PT",
    # "Q",
    # "RSE",
    # "RET",
    # "SLF",
    # "SLOT",
    # "SIM",
    # "TID",
    # "TC",
    # "INT",
    # "ARG",
    # "PTH",
    # "TD",
    # "FIX",
    # "ERA",
    # "PD",
    # "PGH",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "TRY",
    "FLY",
    "NPY",
    # "FAST",
    # "AIR",
    # "PERF",
    "FURB",
    # => "DOC",
    "RUF",
]
ignore = [
    "N812",  # Checks for lowercase imports that are aliased to non-lowercase names.
    "F811",  # Redefinitions of unused names
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D205",  # 1 blank line required between summary line and description
    "PLR0124",  # Name compared with itself
    "N802",  # Checks for functions names that do not follow the snake_case naming convention.
    "N803",  # Checks for argument names that do not follow the snake_case convention.
    "N806",  # Checks for the use of non-lowercase variable names in functions.
    "N815",  # Checks for class variable names that follow the mixedCase convention.
    "PLR2004",  # Magic value used in comparison, consider replacing {value} with a constant variable
    "PLR0913",  # Checks for function definitions that include too many arguments (default 5).
    "RET504",  # Checks for variable assignments that immediately precede a return of the assigned variable.
    "RUF001",  # Checks for ambiguous Unicode characters in strings.
    "TRY002",  # Checks for code that raises Exception or BaseException directly.
    "TRY003",  # Checks for long exception messages that are not defined in the exception class itself.
    "TRY201",  # Checks for needless exception names in raise statements.
    "TRY300",  # Checks for return statements in try blocks.
    "TRY301",  # Checks for raise statements within try blocks. The only raises caught are those that throw exceptions caught by the try statement itself.
]

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true
suppress-none-returning = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.structlint]
source_directory = "src"

[tool.structlint.imports]
primitive_modules = ["regexes"]
external_allowed_everywhere = [
    "collections",
    "os",
    "pathlib",
    "re",
    "sys",
    "typing",
]
internal_allowed_everywhere = ["regexes"]

[tool.structlint.imports.internal.disallowed]
utils = ["utils"]

[tool.structlint.methods.builtins_order]
init = 0
abstract_property = 0.0401
property = 0.041
abstract_private_property = 0.042
private_property = 0.003
abstract_dunder = 0.8
abstract_classmethod = 0.81
abstract_static = 0.82
abstract = 0.9
abstract_private = 0.91
dunder = 1
classmethod = 2
static = 3.5
final = 3.9
normal = 4
private = 5
mangled = 6

[tool.structlint.methods.custom_order]
"@model_validator|model_validate" = 0
"_pydantic_" = 0.01
" adapter\\(" = 0.011
"@field_validator" = 0.1
"model_serializ|model_dump" = 0.00001
"@field_serializer" = 0.3
"__call__" = 0.99
"check_.+" = 9
" read[^ ]+\\(" = 3.98
" write[^ ]+\\(" = 3.99
"[^_][a-z_]+_hook$" = 9

[tool.structlint.docs]
md_dir = "docs/md/api"
allow_additional = false
ignore = "exceptions.py|:_[A-Z]"
order_ignore = ""
file_per_class = ""
file_per_directory = "linus|guido|grace|utils"

[tool.structlint.tests]
unit_dir = "tests/unit"
use_filename_suffix = true
allow_additional = "__edgecases|__error"
ignore = ":main$|configuration\\.py.+\\.__eq__|configuration\\.py.+\\.__repr__|:test__[A-Z]|__init__$|_abcs|exceptions|__get_pydantic_core_schema__"
order_ignore = ""
file_per_class = ""
file_per_directory = ""
function_per_class = ""
replace_double_underscore = true

[tool.scripts.imports.external.disallowed]
utils = ["pydantic"]

[tool.tomlsort]
all = false
in_place = true
no_comments = false
no_header_comments = false
no_footer_comments = false
no_inline_comments = false
no_block_comments = false
no_sort_tables = true
sort_first = ["key1", "key2"]
sort_table_keys = false
sort_inline_tables = false
sort_inline_arrays = false
spaces_before_inline_comment = 2
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
check = false
ignore_case = false

[tool.vulture]
exclude = []
ignore_decorators = ["@app.route", "@require_*"]
ignore_names = ["visit_*", "do_*"]
make_whitelist = false
min_confidence = 60
paths = ["scripts/", "src/"]
sort_by_size = true
verbose = false
